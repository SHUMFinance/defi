{
  "id": "0733788dd16fffb41889f47106606453",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/mock/MockShumRewardLocker.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.6;\n\n/**\n * @title MockLShumRewardLocker\n *\n * @dev A mock LShumRewardLocker contract for testing. We wouldn't need this\n * contract if Hardhat supported Waffle's `calledOnContractWith` on mocks.\n */\ncontract MockShumRewardLocker {\n    struct AppendRewardArgs {\n        address _user;\n        uint256 _amount;\n        uint256 _lockTo;\n    }\n\n    AppendRewardArgs[] appendRewardCalls;\n\n    function lastAppendRewardCall()\n        public\n        view\n        returns (\n            address _user,\n            uint256 _amount,\n            uint256 _lockTo\n        )\n    {\n        AppendRewardArgs memory args = appendRewardCalls[appendRewardCalls.length - 1];\n        return (args._user, args._amount, args._lockTo);\n    }\n\n    function addReward(\n        address _user,\n        uint256 _amount,\n        uint256 _lockTo\n    ) external {\n        appendRewardCalls.push(AppendRewardArgs({_user: _user, _amount: _amount, _lockTo: _lockTo}));\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "evmVersion": "istanbul",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/mock/MockShumRewardLocker.sol": {
        "MockShumRewardLocker": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_lockTo",
                  "type": "uint256"
                }
              ],
              "name": "addReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lastAppendRewardCall",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_lockTo",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610249806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806337a435121461003b57806344ea559a14610078575b600080fd5b6100436100b9565b6040805173ffffffffffffffffffffffffffffffffffffffff9094168452602084019290925282820152519081900360600190f35b6100b76004803603606081101561008e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060208101359060400135610130565b005b6000806000806000600160008054905003815481106100d457fe5b600091825260209182902060408051606081018252600393909302909101805473ffffffffffffffffffffffffffffffffffffffff16808452600182015494840185905260029091015492909101829052969195509350915050565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff9485168152602081019384529081019182526000805460018101825590805290517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600390920291820180547fffffffffffffffffffffffff000000000000000000000000000000000000000016919095161790935590517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564830155517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5659091015556fea2646970667358221220b35ffc2b6427a7ed682eb63e677fce1575e69770b0489e43715d7be1ab5a8d2064736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37A43512 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x44EA559A EQ PUSH2 0x78 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x130 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT PUSH2 0xD4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP3 SWAP1 SWAP2 ADD DUP3 SWAP1 MSTORE SWAP7 SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 DUP5 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE SWAP1 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP1 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP4 ADD SSTORE MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 SWAP1 SWAP2 ADD SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x5F 0xFC 0x2B PUSH5 0x27A7ED682E 0xB6 RETURNDATACOPY PUSH8 0x7FCE1575E69770B0 0x48 SWAP15 NUMBER PUSH18 0x5D7BE1AB5A8D2064736F6C63430007060033 ",
              "sourceMap": "252:741:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806337a435121461003b57806344ea559a14610078575b600080fd5b6100436100b9565b6040805173ffffffffffffffffffffffffffffffffffffffff9094168452602084019290925282820152519081900360600190f35b6100b76004803603606081101561008e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060208101359060400135610130565b005b6000806000806000600160008054905003815481106100d457fe5b600091825260209182902060408051606081018252600393909302909101805473ffffffffffffffffffffffffffffffffffffffff16808452600182015494840185905260029091015492909101829052969195509350915050565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff9485168152602081019384529081019182526000805460018101825590805290517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600390920291820180547fffffffffffffffffffffffff000000000000000000000000000000000000000016919095161790935590517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564830155517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5659091015556fea2646970667358221220b35ffc2b6427a7ed682eb63e677fce1575e69770b0489e43715d7be1ab5a8d2064736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37A43512 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x44EA559A EQ PUSH2 0x78 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x130 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP SUB DUP2 SLOAD DUP2 LT PUSH2 0xD4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP3 SWAP1 SWAP2 ADD DUP3 SWAP1 MSTORE SWAP7 SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 DUP5 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE SWAP1 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP1 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP4 ADD SSTORE MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 SWAP1 SWAP2 ADD SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x5F 0xFC 0x2B PUSH5 0x27A7ED682E 0xB6 RETURNDATACOPY PUSH8 0x7FCE1575E69770B0 0x48 SWAP15 NUMBER PUSH18 0x5D7BE1AB5A8D2064736F6C63430007060033 ",
              "sourceMap": "252:741:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:328;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:216;;;;;;;;;;;;;;;;-1:-1:-1;775:216:0;;;;;;;;;;;;;;:::i;:::-;;441:328;531:13;558:15;587;627:28;658:17;703:1;676:17;:24;;;;:28;658:47;;;;;;;;;;;;;;;;;627:78;;;;;;;;658:47;;;;;;;;627:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:78:0;-1:-1:-1;441:328:0;-1:-1:-1;;441:328:0:o;775:216::-;915:68;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;892:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:216::o"
            },
            "methodIdentifiers": {
              "addReward(address,uint256,uint256)": "44ea559a",
              "lastAppendRewardCall()": "37a43512"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/mock/MockShumRewardLocker.sol": {
        "ast": {
          "absolutePath": "contracts/mock/MockShumRewardLocker.sol",
          "exportedSymbols": {
            "MockShumRewardLocker": [
              60
            ]
          },
          "id": 61,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "57:194:0",
                "text": " @title MockLShumRewardLocker\n @dev A mock LShumRewardLocker contract for testing. We wouldn't need this\n contract if Hardhat supported Waffle's `calledOnContractWith` on mocks."
              },
              "fullyImplemented": true,
              "id": 60,
              "linearizedBaseContracts": [
                60
              ],
              "name": "MockShumRewardLocker",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "MockShumRewardLocker.AppendRewardArgs",
                  "id": 9,
                  "members": [
                    {
                      "constant": false,
                      "id": 4,
                      "mutability": "mutable",
                      "name": "_user",
                      "nodeType": "VariableDeclaration",
                      "scope": 9,
                      "src": "322:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "322:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 9,
                      "src": "345:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "345:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8,
                      "mutability": "mutable",
                      "name": "_lockTo",
                      "nodeType": "VariableDeclaration",
                      "scope": 9,
                      "src": "370:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "370:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "AppendRewardArgs",
                  "nodeType": "StructDefinition",
                  "scope": 60,
                  "src": "288:104:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "appendRewardCalls",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "398:36:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AppendRewardArgs_$9_storage_$dyn_storage",
                    "typeString": "struct MockShumRewardLocker.AppendRewardArgs[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10,
                      "name": "AppendRewardArgs",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 9,
                      "src": "398:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AppendRewardArgs_$9_storage_ptr",
                        "typeString": "struct MockShumRewardLocker.AppendRewardArgs"
                      }
                    },
                    "id": 11,
                    "nodeType": "ArrayTypeName",
                    "src": "398:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AppendRewardArgs_$9_storage_$dyn_storage_ptr",
                      "typeString": "struct MockShumRewardLocker.AppendRewardArgs[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 38,
                    "nodeType": "Block",
                    "src": "617:152:0",
                    "statements": [
                      {
                        "assignments": [
                          22
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22,
                            "mutability": "mutable",
                            "name": "args",
                            "nodeType": "VariableDeclaration",
                            "scope": 38,
                            "src": "627:28:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AppendRewardArgs_$9_memory_ptr",
                              "typeString": "struct MockShumRewardLocker.AppendRewardArgs"
                            },
                            "typeName": {
                              "id": 21,
                              "name": "AppendRewardArgs",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 9,
                              "src": "627:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AppendRewardArgs_$9_storage_ptr",
                                "typeString": "struct MockShumRewardLocker.AppendRewardArgs"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29,
                        "initialValue": {
                          "baseExpression": {
                            "id": 23,
                            "name": "appendRewardCalls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "658:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_AppendRewardArgs_$9_storage_$dyn_storage",
                              "typeString": "struct MockShumRewardLocker.AppendRewardArgs storage ref[] storage ref"
                            }
                          },
                          "id": 28,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 24,
                                "name": "appendRewardCalls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "676:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_AppendRewardArgs_$9_storage_$dyn_storage",
                                  "typeString": "struct MockShumRewardLocker.AppendRewardArgs storage ref[] storage ref"
                                }
                              },
                              "id": 25,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "676:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 26,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "703:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "676:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "658:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AppendRewardArgs_$9_storage",
                            "typeString": "struct MockShumRewardLocker.AppendRewardArgs storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "627:78:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 30,
                                "name": "args",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "723:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AppendRewardArgs_$9_memory_ptr",
                                  "typeString": "struct MockShumRewardLocker.AppendRewardArgs memory"
                                }
                              },
                              "id": 31,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_user",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4,
                              "src": "723:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 32,
                                "name": "args",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "735:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AppendRewardArgs_$9_memory_ptr",
                                  "typeString": "struct MockShumRewardLocker.AppendRewardArgs memory"
                                }
                              },
                              "id": 33,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6,
                              "src": "735:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 34,
                                "name": "args",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "749:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AppendRewardArgs_$9_memory_ptr",
                                  "typeString": "struct MockShumRewardLocker.AppendRewardArgs memory"
                                }
                              },
                              "id": 35,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_lockTo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8,
                              "src": "749:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 36,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "722:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(address,uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 20,
                        "id": 37,
                        "nodeType": "Return",
                        "src": "715:47:0"
                      }
                    ]
                  },
                  "functionSelector": "37a43512",
                  "id": 39,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lastAppendRewardCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "470:2:0"
                  },
                  "returnParameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 15,
                        "mutability": "mutable",
                        "name": "_user",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "531:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "531:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "558:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "_lockTo",
                        "nodeType": "VariableDeclaration",
                        "scope": 39,
                        "src": "587:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "587:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "517:95:0"
                  },
                  "scope": 60,
                  "src": "441:328:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 58,
                    "nodeType": "Block",
                    "src": "882:109:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 52,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41,
                                  "src": "940:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 53,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43,
                                  "src": "956:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 54,
                                  "name": "_lockTo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "974:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 51,
                                "name": "AppendRewardArgs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9,
                                "src": "915:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_AppendRewardArgs_$9_storage_ptr_$",
                                  "typeString": "type(struct MockShumRewardLocker.AppendRewardArgs storage pointer)"
                                }
                              },
                              "id": 55,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "_user",
                                "_amount",
                                "_lockTo"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "915:68:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AppendRewardArgs_$9_memory_ptr",
                                "typeString": "struct MockShumRewardLocker.AppendRewardArgs memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_AppendRewardArgs_$9_memory_ptr",
                                "typeString": "struct MockShumRewardLocker.AppendRewardArgs memory"
                              }
                            ],
                            "expression": {
                              "id": 48,
                              "name": "appendRewardCalls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "892:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_AppendRewardArgs_$9_storage_$dyn_storage",
                                "typeString": "struct MockShumRewardLocker.AppendRewardArgs storage ref[] storage ref"
                              }
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "892:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_AppendRewardArgs_$9_storage_$returns$__$",
                              "typeString": "function (struct MockShumRewardLocker.AppendRewardArgs storage ref)"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "892:92:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 57,
                        "nodeType": "ExpressionStatement",
                        "src": "892:92:0"
                      }
                    ]
                  },
                  "functionSelector": "44ea559a",
                  "id": 59,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addReward",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 41,
                        "mutability": "mutable",
                        "name": "_user",
                        "nodeType": "VariableDeclaration",
                        "scope": 59,
                        "src": "803:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "803:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 59,
                        "src": "826:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "826:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "_lockTo",
                        "nodeType": "VariableDeclaration",
                        "scope": 59,
                        "src": "851:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "793:79:0"
                  },
                  "returnParameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "882:0:0"
                  },
                  "scope": 60,
                  "src": "775:216:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 61,
              "src": "252:741:0"
            }
          ],
          "src": "32:962:0"
        },
        "id": 0
      }
    }
  }
}
